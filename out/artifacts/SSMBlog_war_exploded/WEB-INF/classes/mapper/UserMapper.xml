<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.lilei.blog.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="pers.lilei.blog.entity.User" >
    <id column="name" property="name" jdbcType="CHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="git" property="git" jdbcType="VARCHAR" />
    <result column="weibo" property="weibo" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="pers.lilei.blog.entity.User" extends="BaseResultMap" >
    <result column="image" property="image" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    name, account, password, message, qq, git, weibo, wechat
  </sql>
  <sql id="Blob_Column_List" >
    image
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="pers.lilei.blog.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pers.lilei.blog.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs" >
    select * from user
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where name = #{name,jdbcType=CHAR}
  </select>
  <select id="selectByAandP" resultMap="ResultMapWithBLOBs" parameterType="pers.lilei.blog.entity.User" >
    select * from user
    where account = #{account,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectByA" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select * from user
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where name = #{name,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="pers.lilei.blog.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.lilei.blog.entity.User" >
    insert into user (name, account, password, 
      message, qq, git, weibo, 
      wechat, image)
    values (#{name,jdbcType=CHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{git,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, 
      #{wechat,jdbcType=VARCHAR}, #{image,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="pers.lilei.blog.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="git != null" >
        git,
      </if>
      <if test="weibo != null" >
        weibo,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="image != null" >
        image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="git != null" >
        #{git,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.lilei.blog.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.name != null" >
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.git != null" >
        git = #{record.git,jdbcType=VARCHAR},
      </if>
      <if test="record.weibo != null" >
        weibo = #{record.weibo,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null" >
        wechat = #{record.wechat,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user
    set name = #{record.name,jdbcType=CHAR},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      git = #{record.git,jdbcType=VARCHAR},
      weibo = #{record.weibo,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set name = #{record.name,jdbcType=CHAR},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      git = #{record.git,jdbcType=VARCHAR},
      weibo = #{record.weibo,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.lilei.blog.entity.User" >
    update user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="git != null" >
        git = #{git,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where name = #{name,jdbcType=CHAR}
  </update>
  <update id="updatePasswordByAccountSelective" parameterType="pers.lilei.blog.entity.User" >
    update user
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where account = #{account,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="pers.lilei.blog.entity.User" >
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      git = #{git,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      image = #{image,jdbcType=LONGVARBINARY}
    where name = #{name,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.lilei.blog.entity.User" >
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      git = #{git,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR}
    where name = #{name,jdbcType=CHAR}
  </update>
</mapper>