<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.lilei.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="pers.lilei.blog.po.Article">
    <id column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="article_views" jdbcType="BIGINT" property="articleViews" />
    <result column="article_comment_count" jdbcType="BIGINT" property="articleCommentCount" />
    <result column="article_date" jdbcType="TIMESTAMP" property="articleDate" />
    <result column="article_like_count" jdbcType="BIGINT" property="articleLikeCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="pers.lilei.blog.po.ArticleWithBLOBs">
    <result column="article_title" jdbcType="LONGVARCHAR" property="articleTitle" />
    <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, user_id, article_views, article_comment_count, article_date, article_like_count,
    create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    article_title, article_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="pers.lilei.blog.po.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="pers.lilei.blog.po.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where article_id = #{articleId,jdbcType=BIGINT}
  </select>
  <select id="selectByArticleTitle" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where article_title = #{articleTitle,jdbcType=VARCHAR}
  </select>
  <select id="selectAllArticleWithUserBaseInfoByUserId" parameterType="java.lang.Long" resultType="pers.lilei.blog.pojo.ArticleWithUserBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectArticleWithUserBaseInfoByKey" resultType="pers.lilei.blog.pojo.ArticleWithUserBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where user_id = #{userId,jdbcType=BIGINT} AND CONCAT(article_title) LIKE "%"#{key,jdbcType=VARCHAR}"%"
  </select>
  <select id="selectAllArticleBaseInfoByUserId" parameterType="java.lang.Long" resultType="pers.lilei.blog.pojo.ArticleBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectSortAboutArticleWithUserId" resultType="pers.lilei.blog.pojo.ArticleBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where article_id in
    (select article_id from tbl_article_sort where sort_id = #{sortId,jdbcType=BIGINT})
    AND user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectSortAboutArticleWithUserIdAndKey" resultType="pers.lilei.blog.pojo.ArticleBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where article_id in
    (select article_id from tbl_article_sort where sort_id = #{sortId,jdbcType=BIGINT})
    AND user_id = #{userId,jdbcType=BIGINT}
    AND CONCAT(article_title) LIKE "%"#{key,jdbcType=VARCHAR}"%"
  </select>
  <select id="selectLabelAboutArticleWithUserId" resultType="pers.lilei.blog.pojo.ArticleBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where article_id in
    (select article_id from tbl_article_label where label_id = #{labelId,jdbcType=BIGINT})
    AND user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectLabelAboutArticleWithUserIdAndKey" resultType="pers.lilei.blog.pojo.ArticleBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where article_id in
    (select article_id from tbl_article_label where label_id = #{labelId,jdbcType=BIGINT})
    AND user_id = #{userId,jdbcType=BIGINT}
    AND CONCAT(article_title) LIKE "%"#{key,jdbcType=VARCHAR}"%"
  </select>
  <select id="selectArticleBaseInfoByUserIdAndKey" resultType="pers.lilei.blog.pojo.ArticleBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    where user_id = #{userId,jdbcType=BIGINT} AND CONCAT(article_title) LIKE "%"#{key,jdbcType=VARCHAR}"%"
  </select>
  <select id="getRecommendArticle" parameterType="java.lang.Integer" resultType="pers.lilei.blog.pojo.ArticleWithUserBaseInfoPojo">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_article
    order by (article_like_count + article_comment_count + article_views) DESC limit 0 , #{size,jdbcType=INTEGER}
  </select>
  <select id="getRecommendUser" parameterType="java.lang.Integer" resultType="pers.lilei.blog.pojo.RecommendUserPojo">
    select user_id,sum(article_views + article_comment_count + article_like_count) sum,
    sum(article_views) sum_views,
    sum(article_comment_count) sum_comment_count,
    sum(article_like_count) sum_like_count
    from tbl_article
    group by user_id
    order by sum DESC limit 0, #{size,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_article
    where article_id = #{articleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="pers.lilei.blog.po.ArticleExample">
    delete from tbl_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.lilei.blog.po.ArticleWithBLOBs">
    insert into tbl_article (article_id, user_id, article_views,
      article_comment_count, article_date, article_like_count,
      create_time, update_time, article_title,
      article_content)
    values (#{articleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{articleViews,jdbcType=BIGINT},
      #{articleCommentCount,jdbcType=BIGINT}, #{articleDate,jdbcType=TIMESTAMP}, #{articleLikeCount,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{articleTitle,jdbcType=LONGVARCHAR},
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pers.lilei.blog.po.ArticleWithBLOBs">
    insert into tbl_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleViews != null">
        article_views,
      </if>
      <if test="articleCommentCount != null">
        article_comment_count,
      </if>
      <if test="articleDate != null">
        article_date,
      </if>
      <if test="articleLikeCount != null">
        article_like_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="articleContent != null">
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleViews != null">
        #{articleViews,jdbcType=BIGINT},
      </if>
      <if test="articleCommentCount != null">
        #{articleCommentCount,jdbcType=BIGINT},
      </if>
      <if test="articleDate != null">
        #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleLikeCount != null">
        #{articleLikeCount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.lilei.blog.po.ArticleExample" resultType="java.lang.Long">
    select count(*) from tbl_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_article
    <set>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.articleViews != null">
        article_views = #{record.articleViews,jdbcType=BIGINT},
      </if>
      <if test="record.articleCommentCount != null">
        article_comment_count = #{record.articleCommentCount,jdbcType=BIGINT},
      </if>
      <if test="record.articleDate != null">
        article_date = #{record.articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.articleLikeCount != null">
        article_like_count = #{record.articleLikeCount,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.articleTitle != null">
        article_title = #{record.articleTitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.articleContent != null">
        article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tbl_article
    set article_id = #{record.articleId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      article_views = #{record.articleViews,jdbcType=BIGINT},
      article_comment_count = #{record.articleCommentCount,jdbcType=BIGINT},
      article_date = #{record.articleDate,jdbcType=TIMESTAMP},
      article_like_count = #{record.articleLikeCount,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      article_title = #{record.articleTitle,jdbcType=LONGVARCHAR},
      article_content = #{record.articleContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_article
    set article_id = #{record.articleId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      article_views = #{record.articleViews,jdbcType=BIGINT},
      article_comment_count = #{record.articleCommentCount,jdbcType=BIGINT},
      article_date = #{record.articleDate,jdbcType=TIMESTAMP},
      article_like_count = #{record.articleLikeCount,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.lilei.blog.po.ArticleWithBLOBs">
    update tbl_article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleViews != null">
        article_views = #{articleViews,jdbcType=BIGINT},
      </if>
      <if test="articleCommentCount != null">
        article_comment_count = #{articleCommentCount,jdbcType=BIGINT},
      </if>
      <if test="articleDate != null">
        article_date = #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleLikeCount != null">
        article_like_count = #{articleLikeCount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleTitle != null">
        article_title = #{articleTitle,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleContent != null">
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="pers.lilei.blog.po.ArticleWithBLOBs">
    update tbl_article
    set user_id = #{userId,jdbcType=BIGINT},
      article_views = #{articleViews,jdbcType=BIGINT},
      article_comment_count = #{articleCommentCount,jdbcType=BIGINT},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_like_count = #{articleLikeCount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      article_title = #{articleTitle,jdbcType=LONGVARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.lilei.blog.po.Article">
    update tbl_article
    set user_id = #{userId,jdbcType=BIGINT},
      article_views = #{articleViews,jdbcType=BIGINT},
      article_comment_count = #{articleCommentCount,jdbcType=BIGINT},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_like_count = #{articleLikeCount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
</mapper>
