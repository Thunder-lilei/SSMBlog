<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.lilei.blog.dao.LabelMapper">
  <resultMap id="BaseResultMap" type="pers.lilei.blog.po.Label">
    <id column="label_id" jdbcType="BIGINT" property="labelId" />
    <result column="label_name" jdbcType="VARCHAR" property="labelName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="pers.lilei.blog.po.Label">
    <result column="label_description" jdbcType="LONGVARCHAR" property="labelDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    label_id, label_name, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    label_description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="pers.lilei.blog.po.LabelExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="pers.lilei.blog.po.LabelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_label
    where label_id = #{labelId,jdbcType=BIGINT}
  </select>
  <select id="selectByLabelName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_label
    where label_name = #{labelName,jdbcType=VARCHAR}
  </select>
  <select id="selectByLabelNameWithoutLabelId" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_label
    where label_name = #{labelName,jdbcType=VARCHAR} AND label_id != #{labelId,jdbcType=BIGINT}
  </select>
  <select id="selectAllLabel" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_label
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_label
    where label_id = #{labelId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="pers.lilei.blog.po.LabelExample">
    delete from tbl_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.lilei.blog.po.Label">
    insert into tbl_label (label_id, label_name, create_time,
      update_time, label_description)
    values (#{labelId,jdbcType=BIGINT}, #{labelName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{labelDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pers.lilei.blog.po.Label">
    insert into tbl_label
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="labelId != null">
        label_id,
      </if>
      <if test="labelName != null">
        label_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="labelDescription != null">
        label_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="labelId != null">
        #{labelId,jdbcType=BIGINT},
      </if>
      <if test="labelName != null">
        #{labelName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelDescription != null">
        #{labelDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.lilei.blog.po.LabelExample" resultType="java.lang.Long">
    select count(*) from tbl_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_label
    <set>
      <if test="record.labelId != null">
        label_id = #{record.labelId,jdbcType=BIGINT},
      </if>
      <if test="record.labelName != null">
        label_name = #{record.labelName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.labelDescription != null">
        label_description = #{record.labelDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tbl_label
    set label_id = #{record.labelId,jdbcType=BIGINT},
      label_name = #{record.labelName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      label_description = #{record.labelDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_label
    set label_id = #{record.labelId,jdbcType=BIGINT},
      label_name = #{record.labelName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.lilei.blog.po.Label">
    update tbl_label
    <set>
      <if test="labelName != null">
        label_name = #{labelName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelDescription != null">
        label_description = #{labelDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where label_id = #{labelId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="pers.lilei.blog.po.Label">
    update tbl_label
    set label_name = #{labelName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      label_description = #{labelDescription,jdbcType=LONGVARCHAR}
    where label_id = #{labelId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.lilei.blog.po.Label">
    update tbl_label
    set label_name = #{labelName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where label_id = #{labelId,jdbcType=BIGINT}
  </update>
</mapper>
