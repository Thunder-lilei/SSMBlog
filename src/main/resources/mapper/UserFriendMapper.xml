<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.lilei.blog.dao.UserFriendMapper">
  <resultMap id="BaseResultMap" type="pers.lilei.blog.bean.UserFriend">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_friend_id" jdbcType="BIGINT" property="userFriendId" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, user_friend_id, user_nickname, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="pers.lilei.blog.bean.UserFriendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_user_friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="getNickNameByFriendId" parameterType="java.lang.Long" resultType="java.lang.String">
    select user_nickname
    from tbl_user_friend
    where user_friend_id = #{userFriendId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_user_friend
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getAllFriendIdByUserId" parameterType="java.lang.Long" resultType="java.lang.Long">
    select user_friend_id
    from tbl_user_friend
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="getAllFriendIdByUserIdAndKey" resultType="java.lang.Long">
    select user_friend_id
    from tbl_user_friend
    where user_id = #{userId,jdbcType=BIGINT} AND CONCAT(user_nickname) LIKE "%"#{key,jdbcType=VARCHAR}"%"
  </select>
  <select id="getByUserIdAndUserFriendId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_user_friend
    where user_id = #{userId,jdbcType=BIGINT} AND user_friend_id = #{userFriendId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_user_friend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByUserIdWithUserFriendId" parameterType="java.lang.Long">
    delete from tbl_user_friend
    where user_id = #{userId,jdbcType=BIGINT} AND user_friend_id = #{userFriendId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="pers.lilei.blog.bean.UserFriendExample">
    delete from tbl_user_friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.lilei.blog.bean.UserFriend">
    insert into tbl_user_friend (id, user_id, user_friend_id,
      user_nickname, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userFriendId,jdbcType=BIGINT},
      #{userNickname,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="pers.lilei.blog.bean.UserFriend">
    insert into tbl_user_friend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userFriendId != null">
        user_friend_id,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userFriendId != null">
        #{userFriendId,jdbcType=BIGINT},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.lilei.blog.bean.UserFriendExample" resultType="java.lang.Long">
    select count(*) from tbl_user_friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_user_friend
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userFriendId != null">
        user_friend_id = #{record.userFriendId,jdbcType=BIGINT},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_user_friend
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_friend_id = #{record.userFriendId,jdbcType=BIGINT},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.lilei.blog.bean.UserFriend">
    update tbl_user_friend
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userFriendId != null">
        user_friend_id = #{userFriendId,jdbcType=BIGINT},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.lilei.blog.bean.UserFriend">
    update tbl_user_friend
    set user_id = #{userId,jdbcType=BIGINT},
      user_friend_id = #{userFriendId,jdbcType=BIGINT},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateFriendNickNameByUserIdAndUserFriendId" parameterType="pers.lilei.blog.bean.UserFriend">
    update tbl_user_friend
    set user_nickname = #{userNickname,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT} AND user_friend_id = #{userFriendId,jdbcType=BIGINT}
  </update>
</mapper>
